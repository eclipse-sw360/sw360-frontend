// Copyright (C) Siemens AG, 2023. Part of the SW360 Frontend Project.

// This program and the accompanying materials are made
// available under the terms of the Eclipse Public License 2.0
// which is available at https://www.eclipse.org/legal/epl-2.0/

// SPDX-License-Identifier: EPL-2.0
// License-Filename: LICENSE

'use client'

import { VulnerabilityTrackingStatus, Session, ProjectData, ProjectVulnerabilityTrackingStatus } from '@/object-types'
import { SW360_API_URL } from '@/utils/env'
import { useSession } from 'next-auth/react'
import { Table, _ } from 'next-sw360'
import Link from 'next/link'
import { useTranslations } from 'next-intl'
import { Spinner } from 'react-bootstrap'

export default function VulnerabilityTrackingStatusComponent({ projectData }: { projectData: ProjectData }) {
    const t = useTranslations('default')
    const { data: session, status } = useSession()

    const columns = [
        {
            id: 'vulnerabilityTrackingStatus.name',
            name: t('Name'),
            formatter: ({ id, name }: { id: string, name: string }) =>
                _(
                    <Link href={`/component/release/detail/${id}`} className='text-link text-center'>
                        {name}
                    </Link>
                ),
            sort: true,
        },
        {
            id: 'vulnerabilityTrackingStatus.projectOrigin',
            name: t('Project Origin'),
            sort: true,
        },
        {
            id: 'vulnerabilityTrackingStatus.SVMTrackingStatus',
            name: t('SVM Tracking Status'),
            sort: true,
        },
        {
            id: 'vulnerabilityTrackingStatus.shortStatus',
            name: t('Short Status'),
            sort: true,
        },
        {
            id: '   vulnerabilityTrackingStatus.type',
            name: t('Type'),
            sort: true,
        }
    ]

    const initServerPaginationConfig = (session: Session) => { 
        return {
            url: `${SW360_API_URL}/resource/api/vulnerabilities/trackingStatus/${projectData.id}`,
            then: (data: ProjectVulnerabilityTrackingStatus) => {
                return data.vulnerabilityTrackingStatus.map((elem: VulnerabilityTrackingStatus) => [
                    { 
                        releaseId: elem.releaseId ?? '',
                        name: elem.name ?? ''
                    },
                    elem.projectOrigin ?? '',
                    elem.svmTrackingStatus ?? '',
                    elem.shortStatus ?? '',
                    elem.type ?? ''
                ])
            },
            total: (data: ProjectVulnerabilityTrackingStatus) => data.page.totalElements,
            headers: { Authorization: `${status === 'authenticated' ? session.user.access_token : ''}` },
        }
    }

    return (
        <>
            <div className='mt-4 mx-5'>
                <div className='mb-4'>
                    <h5 className="header-underlined">
                        {t('Vulnerability Status Information')}
                    </h5>
                    <div className='row'>
                        <div className='col-lg-4'>{t('Security Vulnerability Monitoring')}:</div>
                        <div className='col-lg-3'>
                            {projectData.enableSvm ? (
                                <span className='badge bg-success' style={{ fontSize: '0.8rem' }}>
                                    {t('Enabled')}
                                </span>
                            ) : (
                                <span className='badge bg-light text-dark' style={{ fontSize: '0.8rem' }}>
                                    {t('Disabled')}
                                </span>
                            )}
                        </div>
                    </div>
                    <div className='row mt-3'>
                        <div className='col-lg-4'>{t('Security Vulnerabilities Display')}:</div>
                        <div className='col-lg-3'>
                            {projectData.enableVulnerabilitiesDisplay ? (
                                <span className='badge bg-success' style={{ fontSize: '0.8rem' }}>
                                    {t('Enabled')}
                                </span>
                            ) : (
                                <span className='badge bg-light text-dark' style={{ fontSize: '0.8rem' }}>
                                    {t('Disabled')}
                                </span>
                            )}
                        </div>
                    </div>
                </div>
                {projectData.enableVulnerabilitiesDisplay && (
                    <div className='mb-4'>
                        {status === 'authenticated' ? (
                            <Table columns={columns} server={initServerPaginationConfig(session)} selector={true} sort={false} />
                        ) : (
                            <div className='col-12 d-flex justify-content-center align-items-center'>
                                <Spinner className='spinner' />
                            </div>
                        )}
                    </div>
                )}
            </div>
        </>
    )
}
